{"version":3,"sources":["images/unnamed.png","components/firebase/text.js","components/firebase/firebase.js","components/firebase/indexfile.js","components/Header/Heager.js","components/Date/DateNow.js","components/Line/Line.js","components/Table/Ttable.js","components/Main/Main.js","pages/MainPage/MainPage.js","serviceWorker.js","components/Header1/Header1.js","components/MainConverter/MainConverter.js","pages/Converter/Converter.js","components/MainRegistration/MainRegistration.js","pages/Registration/Registration.js","components/MainAutorisation/MainAutorisation.js","pages/Autorization/Autorisation.js","index.js"],"names":["module","exports","FirebaseText","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","storageRef","uid","stor","child","app","initializeApp","this","storage","ref","HeaderForm","state","authUser","listener","onAuthStateChanged","setState","className","But1","src","unnamed","alt","width","height","But","to","onClick","Header","DateNow","date","Date","toLocaleString","year","month","day","Line","name","currency_id","rub","toFixed","Ttable","isLoad","result","fetch","then","response","json","res","currency","rates","EUR","USD","GBP","CNY","NOK","MXN","SEK","Main","MainPage","Boolean","window","location","hostname","match","Header1","MainConverter","r","GPB","value","CurrentValue","usd","eur","gbp","nok","cny","sek","mxn","class","for","type","input","onInput","event","Converter","target","MainRegistration","Change","bind","passwordsEquel","filePut","filevalid","e","passwordsEqualB","photoUploaded","photoValidB","passwordsecond","file","files","length","test","user","put","history","push","catch","error","alert","preventDefault","onSubmit","id","required","pattern","username","usersurname","MainregForm","withRouter","Registration","MainAutorisationForm","Aunten","MainAutorisation","Autorisation","ReactDOM","render","StrictMode","Provider","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.48d49b68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unnamed.ba80d2b3.png\";","import React from 'react';\r\n\r\nconst FirebaseText = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseText.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseText.Consumer>\r\n);\r\n\r\nexport default FirebaseText;","import app from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCyA5u1Bh1t3MCuqP4qmzVmyTkm5uRJTTs\",\r\n  authDomain: \"converter-currency.firebaseapp.com\",\r\n  databaseURL: \"https://converter-currency.firebaseio.com\",\r\n  projectId: \"converter-currency\",\r\n  storageBucket: \"converter-currency.appspot.com\",\r\n  messagingSenderId: \"707902134140\",\r\n  appId: \"1:707902134140:web:52fb266a74953a162976f9\",\r\n  measurementId: \"G-1TBDPXH4TF\"\r\n  };\r\n\r\n  class Firebase {\r\n    constructor() {\r\n      app.initializeApp(firebaseConfig);\r\n  \r\n      this.auth = app.auth();\r\n      this.stor = app.storage().ref();\r\n    }\r\n  \r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n  \r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n  \r\n    doSignOut = () => this.auth.signOut();\r\n  \r\n    storageRef = uid => this.stor.child(`photos/${uid}`);\r\n  }\r\n  \r\n  export default Firebase;","import FirebaseText, { withFirebase } from './text';\r\nimport Firebase from './firebase';\r\n \r\nexport default Firebase;\r\n \r\nexport { FirebaseText, withFirebase };","import React, { Component } from 'react';\r\nimport './Header.css';\r\nimport unnamed from '../../images/unnamed.png'\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport { withFirebase } from '../firebase/indexfile'\r\n\r\n\r\nclass HeaderForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            authUser: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n            authUser\r\n                ? this.setState({ authUser })\r\n                : this.setState({ authUser: null })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Header'>\r\n                <div className='Buttons'>\r\n                    {this.state.authUser ? <But1 /> : <But /> }\r\n                </div>\r\n                <br />\r\n                <div className='Topic'>\r\n                    <div>\r\n                        <img src={unnamed} alt='name' width=\"60\" height=\"60\" className='Picture' />\r\n                    </div>\r\n                    <div className='Name'>\r\n                        Курс валют\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst But = () => (\r\n    <div>\r\n        <Link to=\"/\" className='MainList' >Главная</Link>\r\n        <Link to=\"/Auto\" className='SingIn' >Войти</Link>\r\n    </div>\r\n)\r\n\r\nconst But1 = withFirebase(({firebase}) => (\r\n    <div>\r\n        <Link to=\"/Converter\" className='MainList' >Конвертер</Link>\r\n        <div  className='SingIn' onClick={firebase.doSignOut}>Выйти</div>\r\n    </div>\r\n))\r\n\r\nconst Header = withFirebase(HeaderForm);\r\n\r\nexport default Header\r\n","import React, {Component} from 'react'\r\nimport './DateNow.css'\r\n\r\nclass DateNow extends Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {date: new Date()}\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='DateNow'>\r\n                {this.state.date.toLocaleString(\"ru\", {\r\n                    year: 'numeric',\r\n                    month: 'long',\r\n                    day: 'numeric',\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DateNow","import React, {Component} from 'react'\r\nimport './Line.css'\r\n\r\nclass Line extends Component {\r\n    render() {\r\n        const name = this.props.name\r\n        const currency_id = this.props.currency_id\r\n        const rub = this.props.rub\r\n        return (\r\n            <tr>\r\n                <td className=\"Line\">{name}</td>\r\n                <td className=\"Line\">1 {currency_id} = {(1 / rub).toFixed(2)} RUB</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Line","import React, {Component} from 'react'\r\nimport './Ttable.css'\r\nimport Line from '../Line/Line'\r\n\r\nclass Ttable extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoad: false,\r\n            result: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.exchangeratesapi.io/latest?base=RUB')\r\n            .then(response => response.json())\r\n            .then(res => this.setState({\r\n                isLoad: true,\r\n                result: res,\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        const isLoad = this.state.isLoad;\r\n        if (!isLoad)\r\n            return (<h1>Загрузка...</h1>)\r\n        else {\r\n            const currency = this.state.result.rates\r\n            return (\r\n                <table className=\"Ttable\">\r\n                    <tbody>\r\n                    <Line currency_id=\"EUR\" rub={currency.EUR} name=\"Евро\" />\r\n                    <Line currency_id=\"USD\" rub={currency.USD} name=\"Доллар\" />\r\n                    <Line currency_id=\"GBP\" rub={currency.GBP} name=\"Фунт стерлингов\" />\r\n                    <Line currency_id=\"CNY\" rub={currency.CNY} name=\"Китайский юань\" />\r\n                    <Line currency_id=\"NOK\" rub={currency.NOK} name=\"Норвежская крона\" />\r\n                    <Line currency_id=\"MXN\" rub={currency.MXN} name=\"Мексиканский песо\" />\r\n                    <Line currency_id=\"SEK\" rub={currency.SEK} name=\"Шведская крона\" />\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Ttable","import React, {Component} from 'react'\r\nimport './Main.css'\r\nimport DateNow from '../Date/DateNow';\r\nimport Ttable from '../Table/Ttable'\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return(\r\n            <div className='Main'>\r\n                <DateNow />\r\n                <Ttable />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main","import React, {Component} from 'react'\r\nimport './MainPage.css'\r\nimport Header from '../../components/Header/Heager'\r\nimport Main from '../../components/Main/Main'\r\n\r\nclass MainPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'Main_page'> \r\n                <Header />\r\n                <Main />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport './Header1.css';\r\nimport unnamed from '../../images/unnamed.png'\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport { withFirebase } from '../firebase/indexfile'\r\n\r\nclass Header1Form extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='Header'>\r\n                <div className='Buttons'>\r\n                    <Link to=\"/\" className='MainList' >Главная</Link>\r\n                </div>\r\n                <br />\r\n                <div className='Topic'>\r\n                    <div>\r\n                        <img src={unnamed} alt='name' width=\"60\" height=\"60\" className='Picture' />\r\n                    </div>\r\n                    <div className='Name'>\r\n                        Курс валют\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Header1 = withFirebase(Header1Form);\r\n\r\n\r\nexport default Header1\r\n","import React, {Component} from 'react'\r\nimport './MainConverter'\r\n\r\nclass MainConverter extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoad: false,\r\n            currency: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.exchangeratesapi.io/latest?base=RUB')\r\n            .then(r => r.json())\r\n            .then(res => this.setState({ \r\n                isLoad:true,\r\n                currency: res.rates\r\n            }));\r\n    }\r\n\r\n    CurrentValue(name) {\r\n        if(name === 'USD') {\r\n            return this.state.currency.USD;\r\n        }\r\n        if(name === 'EUR') {\r\n            return this.state.currency.EUR;\r\n        }\r\n        if(name === 'GBP') {\r\n            return this.state.currency.GPB;\r\n        }\r\n        if(name === 'NOK') {\r\n            return this.state.currency.NOK;\r\n        }\r\n        if(name === 'SEK') {\r\n            return this.state.currency.SEK;\r\n        }\r\n        if(name === 'MXN') {\r\n            return this.state.currency.MXN;\r\n        }\r\n        if(name === 'CNY') {\r\n            return this.state.currency.CNY;\r\n        }\r\n    }\r\n\r\n    Converter(value, name) {\r\n        if(name !== 'RUB') {\r\n            this.rub.value = (value / this.CurrentValue(name)).toFixed(1);\r\n        }\r\n        if(name !== 'USD') {\r\n            this.usd.value = (this.rub.value * this.state.currency.USD).toFixed(1);\r\n        }\r\n        if(name !== 'EUR') {\r\n            this.eur.value = (this.rub.value * this.state.currency.EUR).toFixed(1);\r\n        }\r\n        if(name !== 'GBP') {\r\n            this.gbp.value = (this.rub.value * this.state.currency.GBP).toFixed(1);\r\n        }\r\n        if(name !== 'NOK') {\r\n            this.nok.value = (this.rub.value * this.state.currency.NOK).toFixed(1);\r\n        }\r\n        if(name !== 'CNY') {\r\n            this.cny.value = (this.rub.value * this.state.currency.CNY).toFixed(1);\r\n        }\r\n        if(name !== 'SEK') {\r\n            this.sek.value = (this.rub.value * this.state.currency.SEK).toFixed(1);\r\n        }\r\n        if(name !== 'MXN') {\r\n            this.mxn.value = (this.rub.value * this.state.currency.MXN).toFixed(1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className='Main_converter'>\r\n                <form class=\"transparent\">\r\n                    <div class=\"form-inner\">\r\n                        <label for=\"nom\">RUB</label>\r\n                        <input type=\"number\" name='RUB' ref={(input) => this.rub = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                        <label for=\"nom\">EUR</label>\r\n                        <input type=\"number\" name='EUR' ref={(input) => this.eur = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                        <label for=\"nom\">USD</label>\r\n                        <input type=\"number\" name='USD' ref={(input) => this.usd = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                        <label for=\"nom\">GPB</label>\r\n                        <input type=\"number\" name='GBP' ref={(input) => this.gbp = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                        <label for=\"nom\">NOK</label>\r\n                        <input type=\"number\" name='NOK' ref={(input) => this.nok = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                        <label for=\"nom\">SEK</label>\r\n                        <input type=\"number\" name='SEK' ref={(input) => this.sek = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                        <label for=\"nom\">MXN</label>\r\n                        <input type=\"number\" name='MXN' ref={(input) => this.mxn = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                        <label for=\"nom\">CNY</label>\r\n                        <input type=\"number\" name='CNY' ref={(input) => this.cny = input} onInput = {event => this.Converter(event.target.value, event.target.name)}/>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default MainConverter","import React, {Component} from 'react'\r\nimport './Converter.css'\r\nimport Header1 from '../../components/Header1/Header1'\r\nimport MainConverter from '../../components/MainConverter/MainConverter'\r\n\r\nclass Converter extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'Main_page'> \r\n                <Header1 />\r\n                <MainConverter />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Converter\r\n\r\n","import React, { Component } from 'react'\r\nimport './MainRegistration.css'\r\nimport {\r\n    Link, withRouter\r\n} from 'react-router-dom'\r\nimport { withFirebase } from '../firebase/indexfile'\r\n\r\nclass MainRegistration extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.Change = this.Change.bind(this);\r\n        this.state = {\r\n            passwordsEquel: true,\r\n            filePut: true,\r\n            filevalid: true\r\n        }\r\n    }\r\n\r\n    Change(e) {\r\n        let passwordsEqualB = true;\r\n        let photoUploaded = true;\r\n        let photoValidB = true;\r\n\r\n\r\n        if (this.password.value !== this.passwordsecond.value) {\r\n            passwordsEqualB = false;\r\n        }\r\n        if (this.file.files.length === 0) {\r\n            photoUploaded = false;\r\n        }\r\n        else {\r\n            const fileRE = /(\\.jpg|\\.jpeg|\\.gif|\\.png)$/i;\r\n            if (!fileRE.test(this.file.files[0].name)) {\r\n                photoValidB = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            passwordsEquel: passwordsEqualB,\r\n            filePut: photoUploaded,\r\n            filevalid: photoValidB\r\n        });\r\n        if (passwordsEqualB & photoUploaded & photoValidB) {\r\n            this.props.firebase\r\n                .doCreateUserWithEmailAndPassword(this.email.value, this.password.value)\r\n                .then(authUser => {\r\n                    this.props.firebase\r\n                        .storageRef(authUser.user.uid)\r\n                        .put(this.file.files[0]);\r\n                    this.props.history.push(\"/\");\r\n                })\r\n                .catch(error => {\r\n                    alert(error);\r\n                });\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"transparent\" onSubmit={this.Change}>\r\n                <div className=\"form-inner\">\r\n                    <h3>Регистрация</h3>\r\n                    <label for=\"username\">Имя*</label>\r\n                    <input type=\"text\" id=\"username\" required pattern='[А-ЯA-Zа-яa-z]+' ref={(value) => this.username = value} />\r\n                    <label for=\"username\">Фамилия*</label>\r\n                    <input type=\"text\" id=\"surname\" required pattern='[А-ЯA-Zа-яa-z]+' ref={(value) => this.usersurname = value} />\r\n                    <label for=\"email\">Почта*</label>\r\n                    <input id=\"email\" type=\"email\" required ref={(value) => this.email = value} />\r\n                    <label for=\"password\">Пароль*</label>\r\n                    <input id=\"password\" type=\"password\" required ref={(value) => this.password = value} />\r\n                    <label for=\"password_1\">Повторите пароль*</label>\r\n                    <p className='Alert'>\r\n                        {this.state.passwordsEquel ? \"\" : \"Пароли не сопадают\"}\r\n                    </p>\r\n                    <input type=\"password\" id=\"password_1\" ref={(value) => this.passwordsecond = value} />\r\n                    <p className='Alert'>\r\n                        {this.state.filePut ? \"\" : \"Нет фото!\"}\r\n                    </p>\r\n                    <p className='Alert'>\r\n                        {this.state.filevalid ? \"\" : \"Фото должно быть в формате .png/.jpg/.jpeg/.gif!\"}\r\n                    </p>\r\n                    <input type=\"file\" name=\"f\" ref={(value) => this.file = value}></input>\r\n\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Зарегистрироваться\" />\r\n                    <div className=\"Dod\">\r\n                        <p>Зарегистрированы?</p>\r\n                        <Link to=\"Auto\" type=\"submit\" className=\"Bob\">Вход</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst MainregForm = withFirebase(withRouter(MainRegistration));\r\n\r\nexport default MainregForm","import React, {Component} from 'react'\r\nimport './Registration.css'\r\nimport MainRegForm from '../../components/MainRegistration/MainRegistration'\r\nimport Header from '../../components/Header/Heager'\r\n\r\nclass Registration extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'Main_page'> \r\n                <Header />\r\n                <MainRegForm />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Registration;","import React, { Component } from 'react'\r\nimport './MainAutorusation.css'\r\nimport {\r\n    Link, withRouter\r\n} from 'react-router-dom'\r\nimport { withFirebase } from '../firebase/indexfile'\r\n\r\nclass MainAutorisationForm extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.Aunten = this.Aunten.bind(this);\r\n\r\n    }\r\n\r\n    Aunten(e) {\r\n        this.props.firebase\r\n            .doSignInWithEmailAndPassword(this.email.value, this.password.value)\r\n            .then(authUser => {\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch(error => {\r\n                alert(error);\r\n            });\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"transparent\">\r\n                <form onSubmit={this.Aunten}>\r\n                    <div className=\"form-inner\">\r\n                        <h3>Авторизация</h3>\r\n                        <label for=\"username\">Почта</label>\r\n                        <input type=\"text\" id=\"username\" ref={(value) => this.email = value} />\r\n                        <label for=\"password\">Пароль</label>\r\n                        <input id=\"password\" type=\"password\" ref={(value) => this.password = value} />\r\n                        <br />\r\n                        <input type=\"submit\" value=\"Войти\" />\r\n                        <div className=\"Regg\">\r\n                            <p>Не зарегистрированы?</p>\r\n                            <Link to=\"/Reg\" className=\"Linkk\" type=\"submit\">Регистрация</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MainAutorisation = withFirebase(withRouter(MainAutorisationForm));\r\n\r\nexport default MainAutorisation","import React, {Component} from 'react'\r\nimport './Autorisation.css'\r\nimport MainAutorisation from '../../components/MainAutorisation/MainAutorisation'\r\nimport Header from '../../components/Header/Heager'\r\n\r\nclass Autorisation extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'Main_page'> \r\n                <Header />\r\n                <MainAutorisation />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Autorisation;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainPage from './pages/MainPage/MainPage'\nimport * as serviceWorker from './serviceWorker';\nimport Converter from './pages/Converter/Converter'\nimport Registration from './pages/Registration/Registration'\nimport Firebase, { FirebaseText } from './components/firebase/indexfile';\nimport Autorisation from './pages/Autorization/Autorisation'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <FirebaseText.Provider value={new Firebase()}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/Auto\" >\n            <Autorisation />\n          </Route>\n          <Route exact path=\"/Reg\" >\n            <Registration />\n          </Route>\n          <Route exact path=\"/\" >\n            <MainPage />\n          </Route>\n          <Route exact path=\"/Converter\" >\n            <Converter />\n          </Route>\n        </Switch>\n      </Router>\n    </FirebaseText.Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}